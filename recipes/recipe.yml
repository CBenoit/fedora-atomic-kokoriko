---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# Image will be published to ghcr.io/<user>/<name>.
name: atomic-kokoriko

# Description will be included in the image's metadata.
description: "Niri Atomic + minimal host + Toolbox dev stack (Rust/.NET/Node) with Helix & Nushell"

# The base image to build on top of (FROM) and the version tag to use.
# Use the smallest universal blue base rather than the sway‑flavoured variant.
base-image: ghcr.io/ublue-os/base-main
image-version: "42"

# The module configuration describes what is done to the base image.
# Modules are executed in order.
modules:
  # Drop in small system defaults (land in /usr/etc at runtime).
  - type: files
    files:
      - source: system
        destination: / # Copies files/system/* (* means everything inside it) into image's root folder /.

  # Install packages and remove unwanted ones via DNF.
  - type: dnf
    repos:
      copr:
        - atim/starship
    install:
      packages:
        # Common CLI utilities.
        - helix           # TUI editor on the host
        - nu              # Nushell
        - starship        # Shell prompt
        - zoxide          # Smarter cd
        - git
        - ripgrep
        - fd-find
        - wireshark-cli   # tshark + dumpcap
        - tcpdump
        - nmap
        - foot            # Lightweight Wayland terminal

        # Wayland compositor & bar.
        - niri            # Scrollable tiling compositor
        - ironbar         # Minimal status bar

        # Application launcher.
        - anyrun          # Launcher front‑end

        # Input method framework (IME) and addons.
        - fcitx5
        - fcitx5-gtk
        - fcitx5-mozc     # Japanese input engine for Mozc
        - fcitx5-configtool

        # Utilities for bar modules.
        - playerctl       # MPRIS control for music module
        - wl-clipboard    # Clipboard utility used by some ironbar modules
        - wbg             # Static wallpaper setter

        # Audio stack (PipeWire and its session manager) for volume control.
        - pipewire
        - wireplumber
    remove:
      packages:
        # Remove Firefox in favour of the Zen browser flatpak.
        - firefox
        - firefox-langpacks

        # Explicitly remove sway and waybar if pulled in via dependencies.
        # FIXME: Probably not included in the base image. Check that.
        - sway
        - sway-devel
        - waybar

  # Default flatpaks for a minimal but usable desktop.
  # Zen Browser replaces Firefox.
  - type: default-flatpaks
    configurations:
      # System flatpaks we want all users to have and not remove.
      - notify: true # Send notification after install/uninstall is finished.
        scope: system
        install:
          - app.zen_browser.zen
          - org.gnome.Loupe
          - com.visualstudio.code
          - com.github.tchx84.Flatseal
          - io.github.flattool.Warehouse
          - org.wireshark.Wireshark # The flatpak itself does not support capture, but it’s possible to pipe tshark. 

      # Also add Flathub user repo, but no user packages.
      - scope: user

  # Developer fonts.
  # JetBrains Mono Nerd Font provides the glyphs used by ironbar and the terminal.
  # NerdFontsSymbolsOnly ensures extra icons are available without pulling in entire fonts.
  - type: fonts
    fonts:
      nerd-fonts:
        - JetBrainsMono
        - FiraCode
        - NerdFontsSymbolsOnly

  # Provide ujust commands for provisioning dev container(s).
  - type: justfiles

  # Use Chezmoi to layer in dotfiles.
  # Disable init to avoid interfering with host files during build.
  # Dotfiles live at the referenced repository.
  - type: chezmoi
    disable-init: true
    all-users: false
    repository: "https://github.com/CBenoit/dotfiles"
    file-conflict-policy: skip

  # (Optional) If you need NVIDIA/other kernel modules later:
  # - type: akmods
  #   nvidia-driver: nvidia-open
  #   install: []

  # This sets up the proper policy & signing files for signed images to work fully.
  - type: signing
